<nav class="navbar sticky-top navbar-expand-lg bg-body-tertiary">
  <div class="container-fluid">
    <a class="navbar-brand" href="{{ site.url }}"><img src="assets/images/steamdeck.svg" style="width:1.5em; height:1.5em;"/>Unofficial Compendium</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        {% for category in site.display_categories %}
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="{{ site.url }}/#{{ category }}">{{ category }}</a>
        </li>
        {% endfor %}
      </ul>
      {% if page.show_searchbar %}
        <form class="d-flex" role="search">
          <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search" oninput="onSearch(token, this.value)">
        </form>
      {% endif %}
    </div>
  </div>
</nav>

{% if page.show_searchbar %}
<script src="https://cdn.jsdelivr.net/npm/fuse.js@7.1.0/dist/fuse.min.js"></script>
<script>
  var plugins
  var fuse
  var loaded = false
  var token = {}
  async function init(){
    let response = await fetch('{{ site.url }}/api/plugins')
    plugins = await response.json()
    let options = {
      includeScore: true,
      keys: [
        "name",
        "author",
        "description",
        "tags"
      ]
    }
    fuse = new Fuse(plugins, options)
    loaded = true
  }
  init().then(()=>{})
  async function onSearch(token, value){
    if (!loaded) return
    if (!value) {
      plugins.forEach(plugin => {
        let pluginCard = document.getElementById(`card-${plugin.name}`)
        pluginCard.classList.remove('visually-hidden')
      })
      return
    }
    let res = fuse.search(value)
    let pluginMatch = res.filter(resItem=>resItem.score <= 0.5).map(resItem=>resItem.item.name)
    plugins.filter(plugin => !pluginMatch.includes(plugin.name)).forEach(plugin => {
      let pluginCard = document.getElementById(`card-${plugin.name}`)
      pluginCard.classList.add('visually-hidden')
    })
    pluginMatch.forEach(plugin => {
      let pluginCard = document.getElementById(`card-${plugin}`)
      pluginCard.classList.remove('visually-hidden')
    })
  }
</script>
{% endif %}