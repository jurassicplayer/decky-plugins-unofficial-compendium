name: Update Store Data
on:
  schedule:
  - cron: "0 2 * * 1"
  workflow_dispatch:

jobs:
  query_store:
    runs-on: ubuntu-latest
    outputs:
      isNew: ${{ steps.compare.outputs.isNew }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Hash local store data
        run: echo "STORE_SHA=$(sha256sum docs/_data/store.json | awk '{ print $1 }')" >> $GITHUB_ENV
      - name: Poll and hash fresh store data
        run: |
          curl https://plugins.deckbrew.xyz/plugins | jq 'walk(if type == "object" then with_entries(select(.key | test("id") or test("downloads") or test("updates") | not)) else . end)' > docs/_data/store.json
          echo "NEW_STORE_SHA=$(sha256sum docs/_data/store.json | awk '{ print $1 }')" >> $GITHUB_ENV
      - name: Compare hashes
        id: compare
        run: |
          echo $STORE_SHA
          echo $NEW_STORE_SHA
          if [[ "$STORE_SHA" != "$NEW_STORE_SHA" ]]; then
            echo "isNew=true" >> $GITHUB_OUTPUT
          fi
      - name: Load local store data
        id: set-matrix
        if: ${{ steps.compare.outputs.isNew }}
        run: echo "matrix=$(jq -c . < docs/_data/store.json)" >> $GITHUB_OUTPUT
      - name: Upload store artifact
        if: ${{ steps.compare.outputs.isNew }}
        uses: actions/upload-artifact@v4
        with:
          name: store.json
          path: docs/_data/store.json
      # START Remove cache when action/download-artifact isn't broken
      - name: Cache store artifact
        if: ${{ steps.compare.outputs.isNew }}
        uses: actions/cache@v4
        with:
          key: store.json
          path: docs/_data/store.json
      # END
  update_or_create_pages:
    needs: query_store
    runs-on: ubuntu-latest
    outputs:
      isNew: ${{ steps.check_local.outputs.isNew }}
      hasChanges: ${{ steps.check_cache.outputs.hasChanges }}
    strategy:
      matrix:
        plugin: ${{ fromJson(needs.query_store.outputs.matrix) }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Download latest store.json artifact
        uses: actions/download-artifact@v3
        with:
          name: store.json
          path: docs/_data/store.json
      # START Remove cache when action/download-artifact isn't broken
      - name: Un-Cache store artifact
        id: store-artifact
        uses: actions/cache@v4
        with:
          key: store.json
          path: docs/_data/store.json
      # END
      - name: Check local for ${{ matrix.plugin.name }} page
        id: check_local
        run: |
          if [ ! -f "docs/_plugins/${{ matrix.plugin.name }}.md" ]; then
            echo "isNew=true" >> $GITHUB_OUTPUT
          fi
      - name: Create new ${{ matrix.plugin.name }} page
        if: ${{ steps.check_local.outputs.isNew }}
        run: |
          if [ ! -f "docs/_plugins/${{ matrix.plugin.name }}.md" ]; then
            echo --- > "docs/_plugins/${{ matrix.plugin.name }}.md"
            echo layout: plugin >> "docs/_plugins/${{ matrix.plugin.name }}.md"
            echo name: "${{ matrix.plugin.name }}" >> "docs/_plugins/${{ matrix.plugin.name }}.md"
            echo 'project_url: ' >> "docs/_plugins/${{ matrix.plugin.name }}.md"
            echo category: Active >> "docs/_plugins/${{ matrix.plugin.name }}.md"
            echo available_in_store: True >> "docs/_plugins/${{ matrix.plugin.name }}.md"
            echo --- >> "docs/_plugins/${{ matrix.plugin.name }}.md"
            echo '{\% assign store = site.data\[${{ matrix.plugin.name }}\] \%}' >> "docs/_plugins/${{ matrix.plugin.name }}.md"
            echo Generated new ${{ matrix.plugin.name }} page
          fi
      - name: Check cached AutoSuspend.json for changes
        if: ${{ ! steps.check_local.outputs.isNew }}
        id: check_cache
        run: |
          CACHE_SHA=$(sha256sum docs/_data/${{ matrix.plugin.name }}.json | awk '{ print $1 }')
          NEW_CACHE_SHA=$(cat docs/_data/store.json | jq 'first (.[] | select( .name == "${{ matrix.plugin.name }}"))' | sha256sum | awk '{ print $1 }')
          echo $CACHE_SHA
          echo $NEW_CACHE_SHA
          if [[ "$CACHE_SHA" != "$NEW_CACHE_SHA" ]]; then
            echo "hasChanges=true" >> $GITHUB_OUTPUT
          fi
      - name: Create or update cached ${{ matrix.plugin.name }}.json (to preserve data if plugin is removed from the store)
        if: ${{ steps.check_local.outputs.isNew || steps.check_cache.outputs.hasChanges }}
        run: |
          cat docs/_data/store.json | jq 'first (.[] | select( .name == "${{ matrix.plugin.name }}"))' > "docs/_data/${{ matrix.plugin.name }}.json"
      - name: Upload ${{ matrix.plugin.name }}.json artifact
        if: ${{ steps.check_local.outputs.isNew || steps.check_cache.outputs.hasChanges }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.plugin.name }}.json
          path: docs/_data/${{ matrix.plugin.name }}.json
      - name: Upload page artifact
        if: ${{ steps.check_local.outputs.isNew || steps.check_cache.outputs.hasChanges }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.plugin.name }}.md
          path: docs/_plugins/${{ matrix.plugin.name }}.md
          

  create_pr:
    needs: update_or_create_pages
    runs-on: ubuntu-latest
    steps:
      - name: Download plugin page artifacts
        if: ${{ steps.update_or_create_pages.outputs.isNew == 'true' || steps.update_or_create_pages.outputs.hasChanges == 'true' }}
        uses: actions/download-artifact@v3
        with:
          pattern: *.md
          path: docs/_plugins
      - name: Download json artifacts
        if: ${{ steps.update_or_create_pages.outputs.isNew == 'true' || steps.update_or_create_pages.outputs.hasChanges == 'true' }}
        uses: actions/download-artifact@v3
        with:
          pattern: *.json
          path: docs/_data
      # - name: Create or Update Pull Request
      #   if: ${{ steps.update_or_create_pages.outputs.isNew == 'true' || steps.update_or_create_pages.outputs.hasChanges == 'true' }}
      #   uses: gr2m/create-or-update-pull-request-action@v1.10.1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     branch: "workflows-update-store"
      #     commit-message: "chore: update store metadata"
      #     auto-merge: merge
      #     labels: automerge
      #     update-pull-request-title-and-body: true
      
